classifier 1: func f() { g() }; func g() { 5 }; g(f())

	- Core 1: Error
	- Core 2: Error
	- Core 3: 5; doesn't check arity

classifier 2: func f(x) { x + 1 }; func g(y) { y + 2 }; g(f(2))

	- Core 1: 5
	- Core 2: 5
	- Core 3: 3

classifier 3: func f(x) { if (x > 5) { x } else { g(x + 1) } }; func g(y) { f(y) }; f(g(2))

	- Core 1: 6
	- Core 2: timed out
	- Core 3: 6

classifer 4: func f(x) { if (x > 5) { x } else { g(x + 1) } }; func g(y) { f(y); y }; f(2)

	- Core 1: 3
	- Core 2: timed out
	- Core 3: 6

classifier 5: func f(y) { if (y == 3) { y } else { if (f(y + 1) == 3) { 4 } else { y } } }; f(2)
	- Core 1: 4
	- Core 2: timed out
	- Core 3: 3


Core 1: returns result of function call to calling function
Core 2: Can't do recursion; pastes function with its arguments at beginning of program?
Core 3: doesn't check arity, can call recursive functions but return value from recursive functions
	doesn't necessarily return to caller.

