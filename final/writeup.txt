- normal OO behavior:

	- subtyping

		- (1) check to see how casting works. For example, given an object {P} and an object {A} that 
		      extends {P}, given a method that expects a {P}, can I cast it to an {A} and then call a field
		      in {A}? Does this check statically? What about at runtime? (Nov 18th)

		- (2) Check to see that the selector in the field table gives priority to cast over instantiation type.

		- (3) 

- unconventional behavior:

	- multiple inheritance

	- try deleting an attribute, as mentioned in the manual, then pass that object to a method that expects the object 
	  to have certain fields (the one you deleted)

	- 

- static type system:

	- what are the motivations behind a static type system vs. runtime errors?
